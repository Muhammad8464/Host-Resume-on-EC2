name: Deploy React Todo App to EC2

# Trigger the workflow on push to the main branch
on:
  push:
    branches:
      - main  # Change this if your default branch is not 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment to build the React app
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Specify the Node.js version your app uses

      # Step 3: Install project dependencies
      - name: Install dependencies
        run: |
          npm install

      # Step 4: Build the React app for production
      - name: Build React app
        run: |
          npm run build

      # Step 5: Install SSH client (for connecting to EC2)
      - name: Install SSH client
        run: sudo apt-get install -y openssh-client

      # Step 6: Copy the React build files to the EC2 instance
      - name: Copy build files to EC2
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}  # Store your EC2 SSH key in GitHub secrets
          EC2_USER: ${{ secrets.EC2_USER }}        # Store your EC2 username in GitHub secrets
          EC2_HOST: ${{ secrets.EC2_HOST }}        # Store your EC2 host in GitHub secrets
          EC2_PORT: ${{ secrets.EC2_PORT }}        # Store your EC2 port in GitHub secrets
        run: |
          # Create the SSH directory and add the private key
          mkdir -p ~/.ssh
          echo "$EC2_SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # Add EC2's host to known_hosts to avoid man-in-the-middle attacks
          ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts
          
          # Securely copy the build files from the local machine to the EC2 instance
          scp -i ~/.ssh/id_rsa -r ./build/* $EC2_USER@$EC2_HOST:/var/www/html

      # Step 7: SSH into EC2 and restart the web server (NGINX or Apache)
      - name: SSH into EC2 and deploy
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          ssh -i ~/.ssh/id_rsa $EC2_USER@$EC2_HOST << 'EOF'
          cd /var/www/html
          # Optional: Any additional commands, like npm install for server-side scripts, can go here
          
          # Restart NGINX (or another web server) to serve the new build
          sudo systemctl restart nginx
          EOF
